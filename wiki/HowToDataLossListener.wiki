#summary Data loss listener usage example.
#labels Phase-Deploy

= Data loss listener usage example =

In order to get data loss listener up and running, the following steps should be performed

== Maven dependency ==

First, add a coherence-dataloss-listener maven dependency as described [DataLossListener#Source_code_and_documentation here].

== Cache configuration ==

Add "canary" cache declaration to your Coherence cache configuration file, mapping this cache to cache scheme you want to monitor

{{{
<?xml version="1.0"?>
<!DOCTYPE cache-config SYSTEM "cache-config.dtd">

<cache-config>
	
	<caching-scheme-mapping>
		<cache-mapping>
			<cache-name>canary-cache</cache-name>
			<scheme-name>distributed-scheme</scheme-name>
		</cache-mapping>
	</caching-scheme-mapping>
	
	<caching-schemes>
		<distributed-scheme>
			<scheme-name>distributed-scheme</scheme-name>
			<service-name>DistributedCache</service-name> 
			<backing-map-scheme>
				<local-scheme/>
			</backing-map-scheme>
			<partition-listener>
				<class-name>org.gridkit.coherence.util.dataloss.PartitionLossListener</class-name>
				<init-params>
					<init-param>
						<param-type>java.lang.String</param-type>
						<param-value>my.application.DataLossListenerImpl</param-value>
					</init-param>
				</init-params>
			</partition-listener>
		</distributed-scheme>
	</caching-schemes>
	
</cache-config>
}}}

Note that cache name is fixed and should be "canary-cache", and monitored distributed scheme should get a `<partition-listener>` implementation as shown above. This listener takes one mandatory `<init-param>` - an application-provided implementation of *org.gridkit.coherence.util.dataloss.!DataLossListener* interface.

These 3 changes are all you need to enable partition loss monitoring in your Coherence configuration: cache declaration, gridkit !PartitionLossListener binding and custom !DataLossListener implementation. 

== Listener implementation ==

Application provides its own implementation of !DataLossListener, and can perform node shutdown, audit and/or log message creation, or recovery attempt. onPartitionLost() method accepts Coherence Partitioned service reference and array of lost partition numbers.
Example implementation below just prints a list of lost partition numbers to standard output.

{{{
package my.application;

import com.tangosol.net.PartitionedService;

/**
 * DataLossListener demonstration implementation
 * 
 * @author malekseev
 * 06.04.2011
 */
public class DataLossListenerImpl implements DataLossListener {
	
	@Override
	public void onPartitionLost(PartitionedService partitionedService, int[] lostPartitions) {
		
		System.out.print("Test listener got lost partitions list:");
		for (int p : lostPartitions) System.out.print(" " + lostPartitions[p]);
		System.out.println();

	}

}
}}}